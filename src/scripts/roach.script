function iterateServersInHost(hostname, callback, currentDepth, maxDepth) {
	if (currentDepth > maxDepth) {
		return true
	}

	var availableHostnames = []
	if (hostname !== null) {
		availableHostnames = scan(hostname)
	} else {
		availableHostnames = scan()
	}

	print("Available hostnames in network: " + availableHostnames)
	
	for (var i = 0; i < availableHostnames.length; i++) {
		var hostname = availableHostnames[i]
		if (hostname === 'home') {
			continue
		}

		callback(hostname, currentDepth, maxDepth)
	}
}

function startServerHack(hostname, currentDepth, maxDepth) {
	var currentHackingLevel = getHackingLevel()
	var requiredHackingLevel = getServerRequiredHackingLevel(hostname)

	print("    " + hostname + " - Requires hacking level: " + requiredHackingLevel)

	if (requiredHackingLevel > currentHackingLevel) {
		print("CANNOT HACK")
		return false
	}

	if (!hasRootAccess(hostname)) {
		print("        No ROOT access, executing NUKE.exe")

		var portsNeededForNuke = getServerNumPortsRequired(hostname)

		if (portsNeededForNuke > 0) {
			if (!fileExists("BruteSSH.exe")) {
				return false
			}
			brutessh(hostname)
		}
		
		if (portsNeededForNuke > 1) {
			if (!fileExists("FTPCrack.exe")) {
				return false
			}
			ftpcrack(hostname)
		}
		
		if (portsNeededForNuke > 2) {
			if (!fileExists("relaySMTP.exe")) {
				return false
			}
			relaysmtp(hostname)
		}
		
		if (portsNeededForNuke > 3) {
			if (!fileExists("HTTPWorm.exe")) {
				return false
			}
			httpworm(hostname)
		}
		
		if (portsNeededForNuke > 4) {
			if (!fileExists("SQLInject.exe")) {
				return false
			}
			sqlinject(hostname)
		}

		nuke(hostname)

		if (!hasRootAccess(hostname)) {
			print("        STILL NO ROOT ACCESS!!!!")
			return false
		}
	}

	var scriptName = "/scripts/slave.script"
	if (!isRunning(scriptName, hostname)) {
		print("		Not hacking yet!")
		killall(hostname)

		print("		Copying " + scriptName + "...")
		scp(scriptName, hostname)
		exec(scriptName, hostname, 1)

		var scriptUsedRAM = getScriptRam(scriptName, hostname)
		var serverMaxRam = getServerMaxRam(hostname)
		var maxThreads = Math.floor(serverMaxRam / scriptUsedRAM)
		
		killall(hostname)

		print("		Server max RAM: " + serverMaxRam)
		print("		Max threads: " + maxThreads)
		print("		Starting hack.script - Threads: " + maxThreads)

		exec(scriptName, hostname, maxThreads)
	} else {
		print("Already hacking!")
	}

	if (iteratedServers.indexOf(hostname) === -1) {
		iteratedServers.push(hostname)
		return iterateServersInHost(hostname, startServerHack, currentDepth + 1, maxDepth)
	}

	return true
}

print(" ")
print("// ---- ROACHING")

if (args.length > 0) {
	print("	(")
	for (var i = 0; i < args.length; i++) {
		print("		" + args[i])
	}
	print("	)")
}

if (args.length < 1) {
	throw new Error("	(maxServerSearchDepth) is expected")
}

iteratedServers = []
iterateServersInHost(null, startServerHack, 1, args[0])

print("DONE ---- //")
print(" ")